services:
  # node_server:
  #   build:
  #     context: .
  #     dockerfile: ./docker/nodejs.Dockerfile
  #     target: dev
  #   volumes:
  #     - ./src:/usr/src/app/src:delegated
  #   expose:
  #     - 8000
  #   ports:
  #     - 8000:8000
  #   env_file:
  #     - .env
  #   restart: always

  db:
    image: postgres
    restart: always
    volumes:
      - ./docker_data/db:/var/lib/postgresql/data
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    ports:
      - 5432:${DB_PORT}
    environment:
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_NAME}
  
  cache:
    image: redis
    restart: always
    ports:
      - 6379:${CACHE_PORT}
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./docker_data/cache:/data

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
  
  # Management panels
  # Management panels are available at 8080 and 8081 (DO NOT FORWARD THESE PORTS)
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:${ADMINER_PORT}
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: true